{"version":3,"file":"index.cjs.js","sources":["lib/helper.js","lib/types.js","lib/util.js","lib/koid.js","lib/index.js"],"sourcesContent":["export function parseConfig(config) {\n    /* istanbul ignore else */\n    if (typeof config === 'undefined') {\n        const dc = genConfigRandom();\n        return parseConfigDc(dc);\n    }\n    if (typeof config.node === 'number') {\n        const configNode = {\n            node: config.node,\n            epoch: config.epoch,\n        };\n        return parseConfigNode(configNode);\n    }\n    else {\n        const conf = config;\n        const configDc = {\n            dataCenter: conf.dataCenter,\n            worker: conf.worker,\n            epoch: conf.epoch,\n        };\n        return parseConfigDc(configDc);\n    }\n}\n/**\n * Generate random id\n */\nexport function genConfigRandom() {\n    const id = Date.now() & 0x3FF;\n    const config = parseConfigNode({ node: id });\n    const ret = {\n        dataCenter: config.dataCenter,\n        worker: config.worker,\n        epoch: 0,\n    };\n    return ret;\n}\nfunction parseConfigDc(config) {\n    const dataCenter = config.dataCenter & 0x1F;\n    const worker = config.worker & 0x1F;\n    const id = (dataCenter << 5 | worker) & 0x3FF;\n    const opts = {\n        genId: id << 12,\n        epoch: typeof config.epoch === 'number' ? config.epoch : 0,\n        dataCenter,\n        worker,\n    };\n    return opts;\n}\nfunction parseConfigNode(config) {\n    const id = config.node & 0x3FF;\n    const dataCenter = id >> 5;\n    const worker = id & 0x1F;\n    const opts = {\n        genId: id << 12,\n        epoch: typeof config.epoch === 'number' ? config.epoch : 0,\n        dataCenter,\n        worker,\n    };\n    return opts;\n}\n","/* eslint-disable no-mixed-operators */\n/* eslint-disable no-bitwise */\nexport var KoidMsg;\n(function (KoidMsg) {\n    KoidMsg[\"SeqExceed\"] = \"Sequence exceeded its maximum value\";\n    KoidMsg[\"ClockBack\"] = \"Clock moved backwards\";\n    KoidMsg[\"NotValidBigintId\"] = \"Not an valid bigint id. Should gross then 0 and less equal then 9223372036854775807n\";\n    KoidMsg[\"NotValidBigintString\"] = \"Not an valid bigint string\";\n    KoidMsg[\"NotValidHexString\"] = \"Not an valid hex string\";\n    KoidMsg[\"NotValidIdFormat\"] = \"Not an valid id value\";\n})(KoidMsg || (KoidMsg = {}));\n","/* eslint-disable no-bitwise */\nimport assert from 'assert';\nimport { KoidMsg } from './types';\nexport const POW10 = Math.pow(2, 10);\nexport const POW26 = Math.pow(2, 26);\nexport const maxBigintId = BigInt('9223372036854775807');\n/**\n * Retrieve Id info from hex, bigint string, Buffer.\n * like '50dddcbfb5c00001' or '0x50dddcbfb5c00001' or \"6755455236955799552\"\n */\nexport function retrieveFromId(id) {\n    /* istanbul ignore else */\n    if (!id) {\n        throw new TypeError(KoidMsg.NotValidIdFormat);\n    }\n    switch (typeof id) {\n        case 'bigint':\n            return retrieveFromBigint(id);\n        case 'string':\n            return retrieveFromStr(id);\n        default:\n            return retrieveFromBuffer(id);\n    }\n}\n/**\n * Retrieve Id info from hex and bigint string\n * like '50dddcbfb5c00001' or '0x50dddcbfb5c00001' or \"6755455236955799552\"\n */\nfunction retrieveFromStr(id) {\n    const int8 = isValidBigintStr(id);\n    return int8\n        ? retrieveFromBigint(int8)\n        : retrieveFromHex(id);\n}\n/**\n * Detect bigint string, eg. '6755455236955799552'\n */\nexport function isValidBigintStr(id) {\n    const str = id.toLowerCase().trim();\n    if (/^[1-9]\\d{18}$/u.test(str)) {\n        const int8 = BigInt(str);\n        if (isValidBigintId(int8)) {\n            return int8;\n        }\n        throw new TypeError(KoidMsg.NotValidBigintString + `: \"${str}\"`);\n    }\n    return false;\n}\nexport function isValidBigintId(id) {\n    return !!(id >= 0 && id <= maxBigintId);\n}\nexport function isValidHexString(id) {\n    let hex = id.toLowerCase().trim();\n    /* istanbul ignore else */\n    if (!/^[\\dxa-f]{16}/u.test(hex)) {\n        return false;\n    }\n    /* istanbul ignore else */\n    if (hex.startsWith('0x')) {\n        hex = hex.slice(2);\n    }\n    const buf = Buffer.from(hex, 'hex');\n    return buf.length === 8 ? buf : false;\n}\n/**\n * Retrieve Id info from hex,\n * like '50dddcbfb5c00001' or '0x50dddcbfb5c00001'\n */\nfunction retrieveFromHex(id) {\n    const buf = isValidHexString(id);\n    /* istanbul ignore else */\n    if (!buf) {\n        throw new TypeError(KoidMsg.NotValidHexString + `: \"${id}\"`);\n    }\n    return retrieveFromBuffer(buf);\n}\nfunction retrieveFromBigint(id) {\n    const buf = Buffer.alloc(8);\n    buf.writeBigUInt64BE(id);\n    return retrieveFromBuffer(buf);\n}\nfunction retrieveFromBuffer(id) {\n    assert(id.length === 8);\n    // 00000010 00110000 10000001 01010000 11101100 00.000000 00000000 00000000\n    // 5d c2 d8 27 be 7f f0 00\n    // 01011101 11000010 11011000 00100111 10111110 01.111111 1111.0000 00000000\n    isValidBigintId(id.readBigInt64BE());\n    const p0 = id.readUInt32BE();\n    const p4 = id.readUInt8(4);\n    const p5 = id.readUInt8(5);\n    // eslint-disable-next-line no-mixed-operators\n    const timestamp = p0 * POW10 + (p4 << 2) + (p5 >> 6);\n    // eslint-disable-next-line no-mixed-operators\n    const dataCenter = (p5 & 0x3F) >> 1 & 0x1F;\n    const p6 = id.readUInt8(6);\n    const worker = ((p5 & 0x3F & 1) << 4) + (p6 >> 4) & 0x1F;\n    const p7 = id.readUInt8(7);\n    const sequence = (p6 << 8) + p7 & 0x1F;\n    const hex = id.toString('hex');\n    const ret = {\n        dataCenter, worker, timestamp, sequence, hex,\n    };\n    return ret;\n}\n","/* eslint-disable no-mixed-operators */\n/* eslint-disable no-bitwise */\nimport { KoidMsg } from './types';\nimport { POW10, POW26, retrieveFromId } from './util';\nexport class Koid {\n    constructor(options) {\n        this.options = options;\n        this.POW10 = POW10;\n        this.POW26 = POW26;\n        this.genId = options.genId;\n        this.epoch = options.epoch;\n        this.seqMask = 0xFFF;\n        this.lastTime = 0;\n        this.seq = 0;\n    }\n    /**\n     * Generate an id, type of Buffer\n     */\n    get next() {\n        const id = Buffer.alloc(8);\n        const time = Date.now() - this.epoch;\n        // Generates id in the same millisecond as the previous id\n        if (time < this.lastTime) {\n            const msg = KoidMsg.ClockBack + `. Refusing to generate id for ${this.lastTime - time} milliseconds`;\n            throw new Error(msg);\n        }\n        else if (time === this.lastTime) {\n            this.seq = this.seq + 1 & this.seqMask;\n            // If all sequence values (4096 unique values including 0) have been used\n            // to generate ids in the current millisecond\n            // sequence counter exceeded its max value (4095)\n            /* istanbul ignore else */\n            if (this.seq === 0) {\n                throw new Error(KoidMsg.SeqExceed);\n            }\n        }\n        else {\n            this.seq = 0;\n        }\n        this.lastTime = time;\n        id.writeUInt32BE((time & 0x3) << 22 | this.genId | this.seq, 4);\n        id.writeUInt8(Math.floor(time / 4) & 0xFF, 4);\n        id.writeUInt16BE(Math.floor(time / this.POW10) & 0xFFFF, 2);\n        id.writeUInt16BE(Math.floor(time / this.POW26) & 0xFFFF, 0);\n        return id;\n    }\n    /**\n     * Generate an id, type of bigint\n     */\n    get nextBigint() {\n        return this.next.readBigInt64BE();\n    }\n    get config() {\n        const ret = {\n            ...this.options,\n        };\n        return ret;\n    }\n    retrieveFromId(id) {\n        return retrieveFromId(id);\n    }\n}\n","import { parseConfig } from './helper';\nimport { Koid } from './koid';\nexport function KoidFactory(config) {\n    const opts = parseConfig(config);\n    const inst = new Koid(opts);\n    return inst;\n}\nexport { KoidMsg, } from './types';\nexport { genConfigRandom } from './helper';\nexport { retrieveFromId } from './util';\n"],"names":["KoidMsg","assert"],"mappings":"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"}